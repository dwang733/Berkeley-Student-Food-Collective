language: ruby
rvm:
 - 2.4.0

bundler_args: --without production

services:
  postgresql

addons:
  firefox: latest

env:
  global:
    # in TravisCI settings, set CCKEY to your CodeClimate Test Reporter ID:
    - CC_TEST_REPORTER_ID=0120833aebc933152e439ca3e9bb55ae6a474db0190dc63123fc28eba7c1cb90
    - CCTR=./cc-test-reporter
    # set to whatever timezone your app assumes from this list:
    # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    - TZ=America/Los_Angeles
    - MOZ_HEADLESS=1

before_install:
    - gem update --system
    - gem install bundler

before_script:
  # install CodeClimate test reporter and tell it we are starting a test run
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > $CCTR
  - chmod +x $CCTR
  - $CCTR before-build
  - psql -c "create database bsfc_test;" -U postgres
  - psql -c "create user bsfcuser;" -U postgres
  - psql -c "alter user bsfcuser with superuser;" -U postgres

script:
  # setup the test database, including any seed data
  - bundle exec rake db:setup
  # insert here any other steps needed (load other sample data, etc) before starting tests
  # run RSpec tests, and capture coverage
  - bundle exec rspec
  - $CCTR format-coverage --output coverage/codeclimate.$SUITE.json
  # run Cucumber scenarios, and capture coverage. --strict means undefined steps result in a failure.
  - bundle exec cucumber --strict
  - $CCTR format-coverage --output coverage/codeclimate.$SUITE.json

after_script:
  # combine coverage from all suites, and upload to CodeClimate
  - $CCTR sum-coverage coverage/codeclimate.*.json | $CCTR upload-coverage
  - $CCTR after-build --exit-code $TRAVIS_TEST_RESULT
  # just in case, be paranoid and remove sensitive config info file
  # - rm -f config/application.yml
